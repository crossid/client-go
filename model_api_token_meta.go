/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
	"time"
)

// ApiTokenMeta struct for ApiTokenMeta
type ApiTokenMeta struct {
	AppId *string `json:"appId,omitempty"`
	CommitId *string `json:"commitId,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	LastModified *time.Time `json:"lastModified,omitempty"`
	Location *string `json:"location,omitempty"`
	RefersToId *string `json:"refersToId,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
	Revision *int64 `json:"revision,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
}

// NewApiTokenMeta instantiates a new ApiTokenMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTokenMeta() *ApiTokenMeta {
	this := ApiTokenMeta{}
	return &this
}

// NewApiTokenMetaWithDefaults instantiates a new ApiTokenMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTokenMetaWithDefaults() *ApiTokenMeta {
	this := ApiTokenMeta{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetAppIdOk() (*string, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *ApiTokenMeta) SetAppId(v string) {
	o.AppId = &v
}

// GetCommitId returns the CommitId field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetCommitId() string {
	if o == nil || o.CommitId == nil {
		var ret string
		return ret
	}
	return *o.CommitId
}

// GetCommitIdOk returns a tuple with the CommitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetCommitIdOk() (*string, bool) {
	if o == nil || o.CommitId == nil {
		return nil, false
	}
	return o.CommitId, true
}

// HasCommitId returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasCommitId() bool {
	if o != nil && o.CommitId != nil {
		return true
	}

	return false
}

// SetCommitId gets a reference to the given string and assigns it to the CommitId field.
func (o *ApiTokenMeta) SetCommitId(v string) {
	o.CommitId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ApiTokenMeta) SetCreated(v time.Time) {
	o.Created = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetLastModified() time.Time {
	if o == nil || o.LastModified == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *ApiTokenMeta) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *ApiTokenMeta) SetLocation(v string) {
	o.Location = &v
}

// GetRefersToId returns the RefersToId field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetRefersToId() string {
	if o == nil || o.RefersToId == nil {
		var ret string
		return ret
	}
	return *o.RefersToId
}

// GetRefersToIdOk returns a tuple with the RefersToId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetRefersToIdOk() (*string, bool) {
	if o == nil || o.RefersToId == nil {
		return nil, false
	}
	return o.RefersToId, true
}

// HasRefersToId returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasRefersToId() bool {
	if o != nil && o.RefersToId != nil {
		return true
	}

	return false
}

// SetRefersToId gets a reference to the given string and assigns it to the RefersToId field.
func (o *ApiTokenMeta) SetRefersToId(v string) {
	o.RefersToId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ApiTokenMeta) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetRevision() int64 {
	if o == nil || o.Revision == nil {
		var ret int64
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetRevisionOk() (*int64, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given int64 and assigns it to the Revision field.
func (o *ApiTokenMeta) SetRevision(v int64) {
	o.Revision = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ApiTokenMeta) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTokenMeta) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ApiTokenMeta) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ApiTokenMeta) SetTenantId(v string) {
	o.TenantId = &v
}

func (o ApiTokenMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId != nil {
		toSerialize["appId"] = o.AppId
	}
	if o.CommitId != nil {
		toSerialize["commitId"] = o.CommitId
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.RefersToId != nil {
		toSerialize["refersToId"] = o.RefersToId
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableApiTokenMeta struct {
	value *ApiTokenMeta
	isSet bool
}

func (v NullableApiTokenMeta) Get() *ApiTokenMeta {
	return v.value
}

func (v *NullableApiTokenMeta) Set(val *ApiTokenMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTokenMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTokenMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTokenMeta(val *ApiTokenMeta) *NullableApiTokenMeta {
	return &NullableApiTokenMeta{value: val, isSet: true}
}

func (v NullableApiTokenMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTokenMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


