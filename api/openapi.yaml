openapi: 3.0.3
info:
  contact:
    email: api-engineering@crossid.io
    name: Crossid API Team
  description: |
    # Introduction

    Crossid API allows you to manage resources in a simple, programmatic way using conventional HTTP requests.

    All of the functionality that you are familiar with in the Crossid UI is also available through this API,
    allowing you to code actions that suites your requirements.

    The rest of this page provides a general overview about the API design and technology that has been implemented.

    ## Requests

    ## HTTP Statuses

    ## Meta

    ### Sample Links Object

    ## Rate Limit

    ## Curl Examples

    ## OpenAPI Specification

    Crossid API conforms the OpenAPI V3 specification.

    The goal of The OpenAPI Specification is to define a standard,
    language-agnostic interface to REST APIs which

    allows both humans and computers to discover and understand the capabilities
    of the service without access to source

    code, documentation, or through network traffic inspection. When properly
    defined via OpenAPI, a consumer can

    understand and interact with the remote service with a minimal amount of
    implementation logic. Similar to what

    interfaces have done for lower-level programming, OpenAPI removes the
    guesswork in calling the service.
  license:
    name: Proprietary
    url: https://www.crossid.io/lic
  termsOfService: https://crossid.io/tos
  title: Crossid API
  version: 2.0.0
  x-logo:
    url: https://www.crossid.io/logo.png
externalDocs:
  description: Find out more about CrossID
  url: https://www.crossid.io
servers:
- description: Development
  url: https://{tenant}.{region}.crossid.io/api/v1
  variables:
    tenant:
      default: acme
      description: Tenant Identifier
    region:
      default: us
      description: The tenant region
tags:
- description: Secrets are sensitive data that should be encrypted, such secrets can
    then be used in various places such as _apps_. an example could be a remote app
    that may need to store password for authentication.
  name: Secrets
paths:
  /api/v1/scim-schemas:
    post:
      description: Create a new SCIM Schema with the given payload.
      operationId: createSCIMSchema
      parameters:
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/create_schema'
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/scimSchema'
              schema:
                $ref: '#/components/schemas/scim_schema'
          description: A SCIM schema, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - write:scimSchema
      summary: Create a new SCIM Schema
      tags:
      - Schemas
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            -d '{"id": "myAppUser", "name": "User", "attributes": [{"name": "userName", "type": "string"}]}' \
            "https://{tenant}.crossid.io/api/v1/scim-schemas?reason=needed"
  /api/v1/scim-schemas/{id}:
    get:
      description: Retrieve details about an existing SCIM Schema by its id.
      operationId: getSCIMSchema
      parameters:
      - description: The schema ID
        example: cidUser
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/scimSchema'
              schema:
                $ref: '#/components/schemas/scim_schema'
          description: A SCIM schema, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - read:scimSchema
      summary: Retrieve an existing SCIM Schema.
      tags:
      - Schemas
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            "https://{tenant}.crossid.io/api/v1/scim-schemas/cidUser"
    put:
      description: Create an existing SCIM Schema with the given payload.
      operationId: replaceSCIMSchema
      parameters:
      - description: The schema ID
        example: cidUser
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/replace_schema'
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/scimSchema'
              schema:
                $ref: '#/components/schemas/scim_schema'
          description: A SCIM schema, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - write:scimSchema
      summary: Replace an existing SCIM Schema
      tags:
      - Schemas
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            -d '{"id": "myAppUser", "name": "User", "attributes": [{"name": "userName", "type": "string"}, {"name": "customerId", "type": "string"}], "meta": {"revision": 1, "tenantId": "acme", "resourceType": "SCIMSchema"}}}' \
            "https://acme.crossid.io/api/v1/scim-schemas/myAppUser?reason=needed"
  /api/v1/resource-types:
    get:
      description: Retrieve a list of existing Resource Types.
      operationId: listResourceTypes
      parameters:
      - description: |
          The filter string used to request a subset of models.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          example: displayName sw "smith"
          type: string
        style: form
      - description: |
          The desired maximum number of query results per page, e.g., 10. A negative value is interpreted as "0". A value of "0" indicates that no model results are to be returned except for "totalResults".
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 10
          format: int64
          type: integer
        style: form
      - description: |
          The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      - description: A string indicating the attribute whose value SHALL be used to
          order the returned responses.
        example: userName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: A string indicating the order in which the "sortBy" parameter
          is applied.  Allowed values are "ascending" and "descending".
        example: ascending
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ascending
          - descending
          type: string
        style: form
      - description: |
          A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          example:
          - userName
          - displayName
          items:
            type: string
          type: array
        style: form
      - description: |
          A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return.  This parameter SHALL have no effect on attributes whose schema "returned" setting is "always".
        explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          example:
          - meta
          - groups
          items:
            type: string
          type: array
        style: form
      - description: |
          a date time indicating that the requested resources should be retrieved from history as how they looked for the specified time.
        example: 2020-18-01T15:04:05-07:00
        explode: true
        in: query
        name: forTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                resourceType:
                  $ref: '#/components/examples/resourceTypeList'
              schema:
                $ref: '#/components/schemas/resource_type_list'
          description: A paged list of resource types.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - read:resourceType
      summary: List existing Resource Types.
      tags:
      - Resource Types
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            "https://acme.us.crossid.io/api/v1/resource-types
    post:
      description: Create a new Resource Type with the given payload.
      operationId: createResourceType
      parameters:
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/create_resource_type'
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/resourceType'
              schema:
                $ref: '#/components/schemas/resource_type'
          description: A Resource Type, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - write:resourceType
      summary: Create a new Resource Type
      tags:
      - Resource Types
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            -d '{"name": "User", "appId": "myapp", "schema": "scimUser", "mode": "local"}' \
            "https://acme.us.crossid.io/api/v1/resource-types?reason=my-app"
  /api/v1/resource-types/{id}:
    get:
      description: Retrieve details about an existing Resource Type by its id.
      operationId: getResourceType
      parameters:
      - description: The resource type ID
        example: T9e682kLYG6iYFSjo5RJVW
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/resourceType'
              schema:
                $ref: '#/components/schemas/resource_type'
          description: A Resource Type, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - read:resourceType
      summary: Retrieve an existing Resource Type.
      tags:
      - Resource Types
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            "https://acme.us.crossid.io/api/v1/resource-types/T9e682kLYG6iYFSjo5RJVW"
    put:
      description: Replace an existing Resource Type with the given payload.
      operationId: replaceResourceType
      parameters:
      - description: The resource type ID
        example: T9e682kLYG6iYFSjo5RJVW
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/replace_resource_type'
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/resourceType'
              schema:
                $ref: '#/components/schemas/resource_type'
          description: A Resource Type, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - write:resourceType
      summary: Replace an existing Resource Type
      tags:
      - Resource Types
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            -d '{"name": "User", "appId": "myapp", "schema": "scimUser", "mode": "local"}' \
            "https://acme.us.crossid.io/api/v1/resource-types/T9e682kLYG6iYFSjo5RJVW?reason=my-app"
  /api/v1/jobs/{id}:
    get:
      description: Retrieve details about an existing Job by its id.
      operationId: getJob
      parameters:
      - description: The job ID
        example: T1e642kLYG3iZYGjo5REVW
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/job'
              schema:
                $ref: '#/components/schemas/job'
          description: A Job, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - job.read
      summary: Retrieve a Job.
      tags:
      - Jobs
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            "https://acme.us.crossid.io/api/v1/jobs/T1e642kLYG3iZYGjo5REVW"
  /api/v1/resources/{appId}/{resourceTypes}:
    get:
      description: Retrieve a list of existing resources of a specific type.
      operationId: listResourcesOfType
      parameters:
      - description: The app ID that owns the resources
        example: HcRFTpgpmnUGSCEoj8wU4
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The resource types
        example: Users
        explode: false
        in: path
        name: resourceTypes
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The filter string used to request a subset of models.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          example: displayName sw "smith"
          type: string
        style: form
      - description: |
          The desired maximum number of query results per page, e.g., 10. A negative value is interpreted as "0". A value of "0" indicates that no model results are to be returned except for "totalResults".
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 10
          format: int64
          type: integer
        style: form
      - description: |
          The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      - description: A string indicating the attribute whose value SHALL be used to
          order the returned responses.
        example: userName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: A string indicating the order in which the "sortBy" parameter
          is applied.  Allowed values are "ascending" and "descending".
        example: ascending
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ascending
          - descending
          type: string
        style: form
      - description: |
          A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          example:
          - userName
          - displayName
          items:
            type: string
          type: array
        style: form
      - description: |
          A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return.  This parameter SHALL have no effect on attributes whose schema "returned" setting is "always".
        explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          example:
          - meta
          - groups
          items:
            type: string
          type: array
        style: form
      - description: |
          a date time indicating that the requested resources should be retrieved from history as how they looked for the specified time.
        example: 2020-18-01T15:04:05-07:00
        explode: true
        in: query
        name: forTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                resourceType:
                  $ref: '#/components/examples/resourceList'
              schema:
                $ref: '#/components/schemas/resource_list'
          description: A paged list of resources.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - resource.read
      summary: List resources of a specific type
      tags:
      - Resources
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            "https://acme.us.crossid.io/api/v1/resources/Users
    post:
      description: |
        Create a new Resource with the given payload.
        Each resource has some type (e.g., User) in some App.

        The resource may be created locally on store or provisioned to the remote app, depends on application configuration.
      operationId: createResource
      parameters:
      - description: The app ID that owns the resources
        example: HcRFTpgpmnUGSCEoj8wU4
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The resource types
        example: Users
        explode: false
        in: path
        name: resourceTypes
        required: true
        schema:
          type: string
        style: simple
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      - description: |
          a unique identifier of an external resource where this change should be correlated to
        example: /flows/1234
        explode: true
        in: query
        name: correlation
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/create_resource'
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/resource'
              schema:
                $ref: '#/components/schemas/resource'
          description: A resource, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - resource.write
      summary: Create a new Resource
      tags:
      - Resources
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            -d '{"id": "myAppUser", "name": "User", "attributes": [{"name": "userName", "type": "string"}]}' \
            "https://acme.us.crossid.io/api/v1/resources/myapp/Groups?reason=needed"
  /api/v1/apps:
    delete:
      description: Delete an existing Application.
      operationId: deleteapp
      parameters:
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Expected response to a valid request.
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - app.write
      summary: Delete an Application
      tags:
      - Apps
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            "https://acme.us.crossid.io/api/v1/apps/5eqtJP6z5bSjStMwhegqwH?reason=delete-myapp"
    post:
      description: Create a new Application with the given payload.
      operationId: createApp
      parameters:
      - description: A descriptive reason of the change
        example: approved by ticket 4423.
        explode: true
        in: query
        name: reason
        required: true
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/create_app'
      responses:
        "200":
          content:
            application/json:
              examples:
                schema:
                  $ref: '#/components/examples/app'
              schema:
                $ref: '#/components/schemas/app'
          description: An App, in JSON format.
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
        default:
          content:
            application/json:
              examples:
                "400":
                  $ref: '#/components/examples/bad_request'
                "401":
                  $ref: '#/components/examples/unauthorized'
                "403":
                  $ref: '#/components/examples/forbidden'
                "404":
                  $ref: '#/components/examples/not_found'
                "429":
                  $ref: '#/components/examples/too_many_requests'
                "500":
                  $ref: '#/components/examples/internal_error'
              schema:
                $ref: '#/components/schemas/error'
          description: Error
          headers:
            ratelimit-limit:
              $ref: '#/components/headers/ratelimit-limit'
            ratelimit-remaining:
              $ref: '#/components/headers/ratelimit-remaining'
            ratelimit-reset:
              $ref: '#/components/headers/ratelimit-reset'
      security:
      - oauth2:
        - app.write
      summary: Create a an Application
      tags:
      - Apps
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $CID_TOKEN" \
            -d '{"appId": "myapp", "displayName": "My App", "appLogic": "local", "active": true}' \
            "https://acme.us.crossid.io/api/v1/apps?reason=create-myapp"
components:
  examples:
    createScimSchema:
      value:
        id: myAppUser
        name: User
        description: My App's User
        attributes:
        - name: userName
          type: string
    bad_request:
      value:
        status: "400"
        detail: Bad Request
    unauthorized:
      value:
        status: "401"
        detail: client is not authenticated.
    forbidden:
      value:
        status: "43"
        detail: the request action is forbidden.
    not_found:
      value:
        status: "404"
        detail: The requested resource could not be found
    too_many_requests:
      value:
        status: "429"
        detail: API Rate limit exceeded.
    internal_error:
      value:
        status: "500"
        detail: Internal Server Error
    scimSchema:
      value:
        id: myAppUser
        name: User
        description: My App's User
        attributes:
        - name: userName
          type: string
        - name: customerId
          type: string
        meta:
          revision: 2
          tenantId: acme
          resourceType: SCIMSchema
    replaceScimSchema:
      value:
        id: myAppUser
        name: User
        description: My App's User
        attributes:
        - name: userName
          type: string
        - name: customerId
          type: string
        meta:
          revision: 2
          tenantId: acme
          resourceType: SCIMSchema
    resourceTypeList:
      value:
        totalResults: 6
        itemsPerPage: 10
        startIndex: 0
        Resources:
        - id: T9e682kLYG6iYFSjo5RJVW
          name: User
          appId: cid
          description: Represents an identity.
          mode: local
          schema: cidUser
          schemaInterfaces:
          - schema: user
            required: true
          - schema: identity
            required: true
          schemaExtensions:
          - schema: ownership
            required: false
          ui:
            overview:
            - displayName
            - title
            - name
            - name.givenName
            - name.familyName
            edit:
            - userName
            - displayName
            - active
            - userType
            - name
            - name.givenName
            - name.familyName
            - groups
          meta:
            tenantId: acme
            appId: '-'
            resourceType: ResourceType
            created: 2021-09-13T19:00:14.646Z
            lastModified: 2021-09-13T19:00:14.646Z
            revision: 1
            location: /resource-types/T9e682kLYG6iYFSjo5RJVW
    createResourceType:
      value:
        name: User
        appId: myApp
        schema: scimUser
        mode: local
    resourceType:
      value:
        id: T9e682kLYG6iYFSjo5RJVW
        name: User
        appId: cid
        description: Represents an identity.
        mode: local
        schema: cidUser
        schemaInterfaces:
        - schema: user
          required: true
        - schema: identity
          required: true
        schemaExtensions:
        - schema: ownership
          required: false
        ui:
          overview:
          - displayName
          - title
          - name
          - name.givenName
          - name.familyName
          edit:
          - userName
          - displayName
          - active
          - userType
          - name
          - name.givenName
          - name.familyName
          - groups
        meta:
          tenantId: acme
          appId: '-'
          resourceType: ResourceType
          created: 2021-09-13T19:00:14.646Z
          lastModified: 2021-09-13T19:00:14.646Z
          revision: 1
          location: /resource-types/T9e682kLYG6iYFSjo5RJVW
    job:
      value:
        id: T1e642kLYG3iZYGjo5REVW
        error: Item already exists.
        status: fatal
        statusCode: 500
        reason: Creating a new user.
        meta:
          tenantId: acme
          appId: '-'
          resourceType: Job
          created: 2021-09-13T19:00:14.646Z
          lastModified: 2021-09-13T19:00:14.646Z
          revision: 1
          location: /jobs/T1e642kLYG3iZYGjo5REVW
    resourceList:
      value:
        totalResults: 6
        itemsPerPage: 10
        startIndex: 0
        Resources:
        - id: HcRFTpgpmnUGSCEoj8wU4
          displayName: John Doe
          active: true
          userName: john.doe@acme.io
          name:
            givenName: John
            familyName: Doe
          emails:
          - primary: true
            type: work
            value: john.doe@acme.io
          meta:
            tenantId: acme
            appId: iam
            resourceType: User
            created: 2021-09-13T19:00:14.646Z
            lastModified: 2021-09-13T19:00:14.646Z
            revision: 1
            location: /resources/cid/Users/HcRFTpgpmnUGSCEoj8wU4
    createResource:
      value:
        displayName: John Doe
        active: true
        userName: john.doe@acme.io
        name:
          givenName: John
          familyName: Doe
        emails:
        - primary: true
          type: work
          value: john.doe@acme.io
    resource:
      value:
        id: HcRFTpgpmnUGSCEoj8wU4
        displayName: John Doe
        active: true
        userName: john.doe@acme.io
        name:
          givenName: John
          familyName: Doe
        emails:
        - primary: true
          type: work
          value: john.doe@acme.io
        meta:
          tenantId: acme
          appId: iam
          resourceType: User
          created: 2021-09-13T19:00:14.646Z
          lastModified: 2021-09-13T19:00:14.646Z
          revision: 1
          location: /resources/cid/Users/HcRFTpgpmnUGSCEoj8wU4
    createApp:
      value:
        appId: myapp
        displayName: My App
        appLogic: local
        active: true
    app:
      value:
        id: 5eqtJP6z5bSjStMwhegqwH
        appId: myapp
        displayName: My App
        appLogic: local
        active: true
        logoUrl: https://www.acme.io/myapp.png
        meta:
          tenantId: acme
          appId: '-'
          resourceType: App
          created: 2021-09-13T19:00:14.646Z
          lastModified: 2021-09-13T19:00:14.646Z
          revision: 1
          location: /apps/5eqtJP6z5bSjStMwhegqwH
  headers:
    ratelimit-limit:
      description: The default limit on number of requests that can be made per hour
        and per minute. Current rate limits are 5000 requests per hour and 250 requests
        per minute.
      example: 5000
      explode: false
      schema:
        type: integer
      style: simple
    ratelimit-remaining:
      description: The number of requests in your hourly quota that remain before
        you hit your request limit. See https://developers.crossid.io/apiv1#rate-limit
        for information about how requests expire.
      example: 4816
      explode: false
      schema:
        type: integer
      style: simple
    ratelimit-reset:
      description: The time when the oldest request will expire. The value is given
        in Unix epoch time. See https://developers.crossid.io/apiv1#rate-limit for
        information about how requests expire.
      example: 1444931833
      explode: false
      schema:
        type: integer
      style: simple
  parameters:
    reason:
      description: A descriptive reason of the change
      example: approved by ticket 4423.
      explode: true
      in: query
      name: reason
      required: true
      schema:
        type: string
      style: form
    schemaId:
      description: The schema ID
      example: cidUser
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    filter:
      description: |
        The filter string used to request a subset of models.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        example: displayName sw "smith"
        type: string
      style: form
    count:
      description: |
        The desired maximum number of query results per page, e.g., 10. A negative value is interpreted as "0". A value of "0" indicates that no model results are to be returned except for "totalResults".
      explode: true
      in: query
      name: count
      required: false
      schema:
        default: 10
        format: int64
        type: integer
      style: form
    startIndex:
      description: |
        The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
      explode: true
      in: query
      name: startIndex
      required: false
      schema:
        default: 0
        format: int64
        type: integer
      style: form
    sortBy:
      description: A string indicating the attribute whose value SHALL be used to
        order the returned responses.
      example: userName
      explode: true
      in: query
      name: sortBy
      required: false
      schema:
        type: string
      style: form
    sortOrder:
      description: A string indicating the order in which the "sortBy" parameter is
        applied.  Allowed values are "ascending" and "descending".
      example: ascending
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        enum:
        - ascending
        - descending
        type: string
      style: form
    attributes:
      description: |
        A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.
      explode: true
      in: query
      name: attributes
      required: false
      schema:
        example:
        - userName
        - displayName
        items:
          type: string
        type: array
      style: form
    excludedAttributes:
      description: |
        A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return.  This parameter SHALL have no effect on attributes whose schema "returned" setting is "always".
      explode: true
      in: query
      name: excludedAttributes
      required: false
      schema:
        example:
        - meta
        - groups
        items:
          type: string
        type: array
      style: form
    forTime:
      description: |
        a date time indicating that the requested resources should be retrieved from history as how they looked for the specified time.
      example: 2020-18-01T15:04:05-07:00
      explode: true
      in: query
      name: forTime
      required: false
      schema:
        format: date-time
        type: string
      style: form
    id:
      description: The resource type ID
      example: T9e682kLYG6iYFSjo5RJVW
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    parameters_id:
      description: The job ID
      example: T1e642kLYG3iZYGjo5REVW
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    appId:
      description: The app ID that owns the resources
      example: HcRFTpgpmnUGSCEoj8wU4
      explode: false
      in: path
      name: appId
      required: true
      schema:
        type: string
      style: simple
    resourceTypes:
      description: The resource types
      example: Users
      explode: false
      in: path
      name: resourceTypes
      required: true
      schema:
        type: string
      style: simple
    correlation:
      description: |
        a unique identifier of an external resource where this change should be correlated to
      example: /flows/1234
      explode: true
      in: query
      name: correlation
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    create_schema:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/createScimSchema'
          schema:
            $ref: '#/components/schemas/scim_schema'
      description: A SCIM Schema, in JSON format.
    replace_schema:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/replaceScimSchema'
          schema:
            $ref: '#/components/schemas/scim_schema'
      description: A SCIM Schema, in JSON format.
    create_resource_type:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/createResourceType'
          schema:
            $ref: '#/components/schemas/resource_type'
      description: A Resource Type in JSON format.
    replace_resource_type:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/resourceType'
          schema:
            $ref: '#/components/schemas/resource_type'
      description: A Resource Type in JSON format.
    create_resource:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/createResource'
          schema:
            $ref: '#/components/schemas/resource'
      description: A Resource, in JSON format.
    create_app:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/createApp'
          schema:
            $ref: '#/components/schemas/app'
      description: An App in JSON format.
  responses:
    default_error:
      content:
        application/json:
          examples:
            "400":
              $ref: '#/components/examples/bad_request'
            "401":
              $ref: '#/components/examples/unauthorized'
            "403":
              $ref: '#/components/examples/forbidden'
            "404":
              $ref: '#/components/examples/not_found'
            "429":
              $ref: '#/components/examples/too_many_requests'
            "500":
              $ref: '#/components/examples/internal_error'
          schema:
            $ref: '#/components/schemas/error'
      description: Error
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    schema:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/scimSchema'
          schema:
            $ref: '#/components/schemas/scim_schema'
      description: A SCIM schema, in JSON format.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    list_resource_types:
      content:
        application/json:
          examples:
            resourceType:
              $ref: '#/components/examples/resourceTypeList'
          schema:
            $ref: '#/components/schemas/resource_type_list'
      description: A paged list of resource types.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    resource_type:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/resourceType'
          schema:
            $ref: '#/components/schemas/resource_type'
      description: A Resource Type, in JSON format.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    job:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/job'
          schema:
            $ref: '#/components/schemas/job'
      description: A Job, in JSON format.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    list_resources:
      content:
        application/json:
          examples:
            resourceType:
              $ref: '#/components/examples/resourceList'
          schema:
            $ref: '#/components/schemas/resource_list'
      description: A paged list of resources.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    resource:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/resource'
          schema:
            $ref: '#/components/schemas/resource'
      description: A resource, in JSON format.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    app:
      content:
        application/json:
          examples:
            schema:
              $ref: '#/components/examples/app'
          schema:
            $ref: '#/components/schemas/app'
      description: An App, in JSON format.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    no_content:
      description: Expected response to a valid request.
  schemas:
    attribute:
      description: SCIM Attribute model.
      example:
        description: phone numbers
        referenceTypes:
        - referenceTypes
        - referenceTypes
        type: string
        required: true
        subAttributes:
        - null
        - null
        search:
          fuzziness: 2
          boost: 1
        uniqueness: none
        noRevision: true
        name: phoneNumber
        canonicalValues: work
        mutability: readWrite
        multiValued: false
        returned: default
        caseExact: true
      properties:
        name:
          description: the name of the attribute.
          example: phoneNumber
          type: string
        description:
          description: a more detailed description.
          example: phone numbers
          type: string
        type:
          enum:
          - string
          - boolean
          - binary
          - decimal
          - integer
          - dateTime
          - reference
          - complex
          example: string
          type: string
        referenceTypes:
          description: indicates the resource types thatare referenced.
          items:
            type: string
          type: array
        multiValued:
          description: true if this is a multi valued (array) attribute
          example: false
          type: boolean
        required:
          description: true if this attribute is required.
          type: boolean
        mutability:
          enum:
          - readOnly
          - readWrite
          - immutable
          - writeOnly
          example: readWrite
          type: string
        returned:
          enum:
          - always
          - never
          - default
          - request
          example: default
          type: string
        uniqueness:
          enum:
          - none
          - server
          - global
          type: string
        caseExact:
          description: true if a string attribute is case sensitive.
          type: boolean
        canonicalValues:
          description: A collection of suggested canonical values that MAY be used
            (e.g., "work", "home")
          example: work
          items:
            type: string
          type: array
        noRevision:
          description: true if a change of this attribute should not create a revision
            in history.
          type: boolean
        subAttributes:
          items:
            $ref: '#/components/schemas/attribute'
          type: array
        search:
          $ref: '#/components/schemas/attribute_search'
      required:
      - name
      - type
      type: object
    meta:
      description: Describes metadata of a model.
      example:
        created: 2000-01-23T04:56:07.000+00:00
        appId: appId
        tenantId: tenantId
        location: location
        lastModified: 2000-01-23T04:56:07.000+00:00
        resourceType: resourceType
        revision: 0.8008281904610115
      properties:
        tenantId:
          type: string
        appId:
          type: string
        resourceType:
          type: string
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        revision:
          type: number
        location:
          type: string
      required:
      - resourceType
      - revision
      - tenantId
      type: object
    scim_schema:
      description: SCIM Schema model.
      example:
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          appId: appId
          tenantId: tenantId
          location: location
          lastModified: 2000-01-23T04:56:07.000+00:00
          resourceType: resourceType
          revision: 0.8008281904610115
        name: name
        description: description
        attributes:
        - description: phone numbers
          referenceTypes:
          - referenceTypes
          - referenceTypes
          type: string
          required: true
          subAttributes:
          - null
          - null
          search:
            fuzziness: 2
            boost: 1
          uniqueness: none
          noRevision: true
          name: phoneNumber
          canonicalValues: work
          mutability: readWrite
          multiValued: false
          returned: default
          caseExact: true
        - description: phone numbers
          referenceTypes:
          - referenceTypes
          - referenceTypes
          type: string
          required: true
          subAttributes:
          - null
          - null
          search:
            fuzziness: 2
            boost: 1
          uniqueness: none
          noRevision: true
          name: phoneNumber
          canonicalValues: work
          mutability: readWrite
          multiValued: false
          returned: default
          caseExact: true
        id: id
      properties:
        id:
          description: unique identifier of the schema.
          type: string
        name:
          description: the name of the schema.
          type: string
        description:
          description: a more detailed description.
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/attribute'
          type: array
        meta:
          $ref: '#/components/schemas/meta'
      type: object
    error:
      properties:
        status:
          description: The HTTP status code (see [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6))
            expressed as a JSON string.
          example: not_found
          type: string
        type:
          description: A detail error keyword.
          example: tooMany
          type: string
        detail:
          description: A message providing additional information about the error,
            including  details to help resolve it when possible.
          example: The resource you were accessing could not be found.
          type: string
        validation:
          items:
            properties:
              propertyPath:
                type: string
              invalidValue:
                type: string
              message:
                type: string
          type: array
      required:
      - status
      type: object
    list:
      additionalProperties: true
      description: A list of models.
      properties:
        totalResults:
          example: 100
          format: int64
          type: integer
        itemsPerPage:
          example: 10
          type: integer
        startIndex:
          example: 1
          format: int64
          type: integer
      type: object
    resource_type_schema_ext:
      description: ResourceType schema extension.
      example:
        schema: schema
        required: true
      properties:
        schema:
          description: The id of the schema (e.g., "risk")
          type: string
        required:
          description: True if every resource must have this schema extension.
          type: boolean
      type: object
    resource_type:
      description: ResourceType model.
      example:
        mode: local
        schema: schema
        toApp: toApp
        toStore: toStore
        ui:
          overview:
          - overview
          - overview
          edit:
          - edit
          - edit
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          appId: appId
          tenantId: tenantId
          location: location
          lastModified: 2000-01-23T04:56:07.000+00:00
          resourceType: resourceType
          revision: 0.8008281904610115
        appId: appId
        name: name
        description: description
        schemaInterfaces:
        - schema: schema
          required: true
        - schema: schema
          required: true
        schemaExtensions:
        - schema: schema
          required: true
        - schema: schema
          required: true
        id: id
      properties:
        id:
          description: unique identifier of the resource type.
          type: string
        name:
          description: the resourec type name, starting with uppercase, no spaces
            allowed. e.g. ("User", "ServiceAccount")
          type: string
        appId:
          description: all resource types belongs to some app, this is the identifier
            where this resource type belongs to (e.g., "myapp")
          type: string
        description:
          description: a more detailed description.
          type: string
        mode:
          description: |
            *local* mode means that resources of this resource type are managed internally within the store. where *remote* mode means that resources
            are managed externally, this remote mode, any changes made to resources will be provisioned to the external app.
          enum:
          - local
          - remote
          type: string
        schema:
          description: The id of the primary schema for this resource type. (e.g.,
            "scimUser")
          type: string
        schemaInterfaces:
          description: a list of schema interfaces, each interface's attributes will
            be merged directly into the primary schema.
          items:
            $ref: '#/components/schemas/resource_type_schema_ext'
          type: array
        schemaExtensions:
          description: a list of schema extensions, each extension will be mounted
            into the primary schema under its name.
          items:
            $ref: '#/components/schemas/resource_type_schema_ext'
          type: array
        toApp:
          description: |
            The ID of the mapper that maps attributes from this resource type form to their app representation.

            only applied for *remote* resources.
          type: string
        toStore:
          description: |
            The ID of the mapper that maps attributes from their app representation to the form of this resource type.

            only applied for *remote* resources.
          type: string
        ui:
          $ref: '#/components/schemas/resource_type_ui'
        meta:
          $ref: '#/components/schemas/meta'
      type: object
    resource_type_list:
      allOf:
      - $ref: '#/components/schemas/list'
      - $ref: '#/components/schemas/resource_type_list_allOf'
      description: A list of resource types.
    job:
      description: Job model.
      example:
        reason: reason
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          appId: appId
          tenantId: tenantId
          location: location
          lastModified: 2000-01-23T04:56:07.000+00:00
          resourceType: resourceType
          revision: 0.8008281904610115
        id: id
        error: error
        status: enqueued
        statusCode: 0.8008281904610115
      properties:
        id:
          description: Unique identifier of the job.
          type: string
        error:
          description: Error message in case of a failure.
          type: string
        status:
          description: The current status of the job.
          enum:
          - enqueued
          - started
          - failed
          - fatal
          - canceled
          - success
          type: string
        statusCode:
          description: The current status code of the job, corresponds to http status
            codes.
          type: number
        reason:
          description: A descriptive reason describing the purpose of the job.
          type: string
        meta:
          $ref: '#/components/schemas/meta'
      type: object
    resource:
      additionalProperties: true
      description: Resource model.
      example:
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          appId: appId
          tenantId: tenantId
          location: location
          lastModified: 2000-01-23T04:56:07.000+00:00
          resourceType: resourceType
          revision: 0.8008281904610115
        id: id
      properties:
        id:
          description: unique identifier of the schema.
          type: string
        meta:
          $ref: '#/components/schemas/meta'
      type: object
    resource_list:
      allOf:
      - $ref: '#/components/schemas/list'
      - $ref: '#/components/schemas/resource_list_allOf'
      description: A list of resources.
    app:
      description: App model.
      example:
        appLogic: appLogic
        displayName: displayName
        appId: appId
        active: true
        id: id
        config:
          key: '{}'
        logoUrl: logoUrl
      properties:
        id:
          description: auto generated unique identifier of the app.
          type: string
        appId:
          description: user friendly identifier of the app.
          type: string
        displayName:
          description: A descriptive name of the app.
          type: string
        appLogic:
          description: The application logic controller.
          type: string
        active:
          description: A Boolean value indicating the App's administrative status.
          type: boolean
        logoUrl:
          description: URL of the app's logo.
          type: string
        config:
          additionalProperties: true
          description: Application configuration, may vary according to the app logic.
          type: object
      type: object
    attribute_search:
      example:
        fuzziness: 2
        boost: 1
      properties:
        boost:
          example: 1
          type: integer
        fuzziness:
          example: 2
          type: integer
      type: object
    resource_type_ui:
      description: Contains hints for the UI how to render this resource type.
      example:
        overview:
        - overview
        - overview
        edit:
        - edit
        - edit
      properties:
        overview:
          description: The attributes to display in the resource page.
          items:
            type: string
          type: array
        edit:
          description: The attributes to let client edit.
          items:
            type: string
          type: array
      type: object
    resource_type_list_allOf:
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/resource_type'
          type: array
      required:
      - Resources
      type: object
    resource_list_allOf:
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/resource'
          type: array
      required:
      - Resources
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://crossid.us.crossid.io/oauth2/auth
          scopes:
            manage:read:users: read users info
            write:users: modify or remove users
          tokenUrl: https://crossid.us.crossid.io/oauth2/token
      type: oauth2
x-tagGroups:
- name: Tenant API
  tags:
  - OAuth2
  - Apps
  - Resources
  - Schemas
  - Resource Types
  - Jobs
