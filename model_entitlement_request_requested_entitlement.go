/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// EntitlementRequestRequestedEntitlement struct for EntitlementRequestRequestedEntitlement
type EntitlementRequestRequestedEntitlement struct {
	Comment *string `json:"comment,omitempty"`
	NeededForHours *int64 `json:"neededForHours,omitempty"`
	Path *string `json:"path,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewEntitlementRequestRequestedEntitlement instantiates a new EntitlementRequestRequestedEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementRequestRequestedEntitlement() *EntitlementRequestRequestedEntitlement {
	this := EntitlementRequestRequestedEntitlement{}
	return &this
}

// NewEntitlementRequestRequestedEntitlementWithDefaults instantiates a new EntitlementRequestRequestedEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementRequestRequestedEntitlementWithDefaults() *EntitlementRequestRequestedEntitlement {
	this := EntitlementRequestRequestedEntitlement{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *EntitlementRequestRequestedEntitlement) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRequestRequestedEntitlement) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *EntitlementRequestRequestedEntitlement) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *EntitlementRequestRequestedEntitlement) SetComment(v string) {
	o.Comment = &v
}

// GetNeededForHours returns the NeededForHours field value if set, zero value otherwise.
func (o *EntitlementRequestRequestedEntitlement) GetNeededForHours() int64 {
	if o == nil || o.NeededForHours == nil {
		var ret int64
		return ret
	}
	return *o.NeededForHours
}

// GetNeededForHoursOk returns a tuple with the NeededForHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRequestRequestedEntitlement) GetNeededForHoursOk() (*int64, bool) {
	if o == nil || o.NeededForHours == nil {
		return nil, false
	}
	return o.NeededForHours, true
}

// HasNeededForHours returns a boolean if a field has been set.
func (o *EntitlementRequestRequestedEntitlement) HasNeededForHours() bool {
	if o != nil && o.NeededForHours != nil {
		return true
	}

	return false
}

// SetNeededForHours gets a reference to the given int64 and assigns it to the NeededForHours field.
func (o *EntitlementRequestRequestedEntitlement) SetNeededForHours(v int64) {
	o.NeededForHours = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *EntitlementRequestRequestedEntitlement) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRequestRequestedEntitlement) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *EntitlementRequestRequestedEntitlement) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *EntitlementRequestRequestedEntitlement) SetPath(v string) {
	o.Path = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *EntitlementRequestRequestedEntitlement) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRequestRequestedEntitlement) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *EntitlementRequestRequestedEntitlement) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *EntitlementRequestRequestedEntitlement) SetValue(v string) {
	o.Value = &v
}

func (o EntitlementRequestRequestedEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.NeededForHours != nil {
		toSerialize["neededForHours"] = o.NeededForHours
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableEntitlementRequestRequestedEntitlement struct {
	value *EntitlementRequestRequestedEntitlement
	isSet bool
}

func (v NullableEntitlementRequestRequestedEntitlement) Get() *EntitlementRequestRequestedEntitlement {
	return v.value
}

func (v *NullableEntitlementRequestRequestedEntitlement) Set(val *EntitlementRequestRequestedEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementRequestRequestedEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementRequestRequestedEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementRequestRequestedEntitlement(val *EntitlementRequestRequestedEntitlement) *NullableEntitlementRequestRequestedEntitlement {
	return &NullableEntitlementRequestRequestedEntitlement{value: val, isSet: true}
}

func (v NullableEntitlementRequestRequestedEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementRequestRequestedEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


