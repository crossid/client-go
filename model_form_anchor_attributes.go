/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// FormAnchorAttributes struct for FormAnchorAttributes
type FormAnchorAttributes struct {
	Href *string `json:"href,omitempty"`
	Title string `json:"title"`
}

// NewFormAnchorAttributes instantiates a new FormAnchorAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormAnchorAttributes(title string) *FormAnchorAttributes {
	this := FormAnchorAttributes{}
	this.Title = title
	return &this
}

// NewFormAnchorAttributesWithDefaults instantiates a new FormAnchorAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormAnchorAttributesWithDefaults() *FormAnchorAttributes {
	this := FormAnchorAttributes{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *FormAnchorAttributes) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormAnchorAttributes) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *FormAnchorAttributes) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *FormAnchorAttributes) SetHref(v string) {
	o.Href = &v
}

// GetTitle returns the Title field value
func (o *FormAnchorAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *FormAnchorAttributes) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *FormAnchorAttributes) SetTitle(v string) {
	o.Title = v
}

func (o FormAnchorAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if true {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableFormAnchorAttributes struct {
	value *FormAnchorAttributes
	isSet bool
}

func (v NullableFormAnchorAttributes) Get() *FormAnchorAttributes {
	return v.value
}

func (v *NullableFormAnchorAttributes) Set(val *FormAnchorAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableFormAnchorAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableFormAnchorAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormAnchorAttributes(val *FormAnchorAttributes) *NullableFormAnchorAttributes {
	return &NullableFormAnchorAttributes{value: val, isSet: true}
}

func (v NullableFormAnchorAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormAnchorAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


