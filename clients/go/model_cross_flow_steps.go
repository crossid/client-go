/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// CrossFlowSteps struct for CrossFlowSteps
type CrossFlowSteps struct {
	Items []CrossFlowStep
}

// NewCrossFlowSteps instantiates a new CrossFlowSteps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrossFlowSteps() *CrossFlowSteps {
	this := CrossFlowSteps{}
	return &this
}

// NewCrossFlowStepsWithDefaults instantiates a new CrossFlowSteps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrossFlowStepsWithDefaults() *CrossFlowSteps {
	this := CrossFlowSteps{}
	return &this
}

func (o CrossFlowSteps) MarshalJSON() ([]byte, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return json.Marshal(toSerialize)
}

func (o *CrossFlowSteps) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableCrossFlowSteps struct {
	value *CrossFlowSteps
	isSet bool
}

func (v NullableCrossFlowSteps) Get() *CrossFlowSteps {
	return v.value
}

func (v *NullableCrossFlowSteps) Set(val *CrossFlowSteps) {
	v.value = val
	v.isSet = true
}

func (v NullableCrossFlowSteps) IsSet() bool {
	return v.isSet
}

func (v *NullableCrossFlowSteps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrossFlowSteps(val *CrossFlowSteps) *NullableCrossFlowSteps {
	return &NullableCrossFlowSteps{value: val, isSet: true}
}

func (v NullableCrossFlowSteps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrossFlowSteps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


