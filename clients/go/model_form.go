/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// Form struct for Form
type Form struct {
	Action string `json:"action"`
	DisplayName *string `json:"displayName,omitempty"`
	Elements FormElements `json:"elements"`
	ExternalId *string `json:"externalId,omitempty"`
	Id string `json:"id"`
}

// NewForm instantiates a new Form object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForm(action string, elements FormElements, id string) *Form {
	this := Form{}
	this.Action = action
	this.Elements = elements
	this.Id = id
	return &this
}

// NewFormWithDefaults instantiates a new Form object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormWithDefaults() *Form {
	this := Form{}
	return &this
}

// GetAction returns the Action field value
func (o *Form) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *Form) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *Form) SetAction(v string) {
	o.Action = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Form) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Form) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Form) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Form) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetElements returns the Elements field value
func (o *Form) GetElements() FormElements {
	if o == nil {
		var ret FormElements
		return ret
	}

	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value
// and a boolean to check if the value has been set.
func (o *Form) GetElementsOk() (*FormElements, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Elements, true
}

// SetElements sets field value
func (o *Form) SetElements(v FormElements) {
	o.Elements = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *Form) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Form) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *Form) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *Form) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetId returns the Id field value
func (o *Form) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Form) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Form) SetId(v string) {
	o.Id = v
}

func (o Form) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if true {
		toSerialize["elements"] = o.Elements
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableForm struct {
	value *Form
	isSet bool
}

func (v NullableForm) Get() *Form {
	return v.value
}

func (v *NullableForm) Set(val *Form) {
	v.value = val
	v.isSet = true
}

func (v NullableForm) IsSet() bool {
	return v.isSet
}

func (v *NullableForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForm(val *Form) *NullableForm {
	return &NullableForm{value: val, isSet: true}
}

func (v NullableForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


