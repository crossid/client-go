/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// TasksListAllOf struct for TasksListAllOf
type TasksListAllOf struct {
	Resources []Task `json:"Resources"`
}

// NewTasksListAllOf instantiates a new TasksListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasksListAllOf(resources []Task, ) *TasksListAllOf {
	this := TasksListAllOf{}
	this.Resources = resources
	return &this
}

// NewTasksListAllOfWithDefaults instantiates a new TasksListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasksListAllOfWithDefaults() *TasksListAllOf {
	this := TasksListAllOf{}
	return &this
}

// GetResources returns the Resources field value
func (o *TasksListAllOf) GetResources() []Task {
	if o == nil  {
		var ret []Task
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *TasksListAllOf) GetResourcesOk() (*[]Task, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Resources, true
}

// SetResources sets field value
func (o *TasksListAllOf) SetResources(v []Task) {
	o.Resources = v
}

func (o TasksListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableTasksListAllOf struct {
	value *TasksListAllOf
	isSet bool
}

func (v NullableTasksListAllOf) Get() *TasksListAllOf {
	return v.value
}

func (v *NullableTasksListAllOf) Set(val *TasksListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTasksListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTasksListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasksListAllOf(val *TasksListAllOf) *NullableTasksListAllOf {
	return &NullableTasksListAllOf{value: val, isSet: true}
}

func (v NullableTasksListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasksListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


