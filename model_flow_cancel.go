/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// FlowCancel struct for FlowCancel
type FlowCancel struct {
	// jobs created by the flow that were due to run and were canceled
	CanceledJobs *[]string `json:"canceledJobs,omitempty"`
	// flow instance id that was canceled
	FlowId *string `json:"flowId,omitempty"`
	// flow status after cancellation. always \"canceled\"
	FlowStatus *string `json:"flowStatus,omitempty"`
	// jobs created by the flow that were due to run and failed cancel
	NotCanceledJobs *[]string `json:"notCanceledJobs,omitempty"`
	// flow tasks that were canceled along with the flow
	TaskIds *[]string `json:"taskIds,omitempty"`
}

// NewFlowCancel instantiates a new FlowCancel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowCancel() *FlowCancel {
	this := FlowCancel{}
	return &this
}

// NewFlowCancelWithDefaults instantiates a new FlowCancel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowCancelWithDefaults() *FlowCancel {
	this := FlowCancel{}
	return &this
}

// GetCanceledJobs returns the CanceledJobs field value if set, zero value otherwise.
func (o *FlowCancel) GetCanceledJobs() []string {
	if o == nil || o.CanceledJobs == nil {
		var ret []string
		return ret
	}
	return *o.CanceledJobs
}

// GetCanceledJobsOk returns a tuple with the CanceledJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCancel) GetCanceledJobsOk() (*[]string, bool) {
	if o == nil || o.CanceledJobs == nil {
		return nil, false
	}
	return o.CanceledJobs, true
}

// HasCanceledJobs returns a boolean if a field has been set.
func (o *FlowCancel) HasCanceledJobs() bool {
	if o != nil && o.CanceledJobs != nil {
		return true
	}

	return false
}

// SetCanceledJobs gets a reference to the given []string and assigns it to the CanceledJobs field.
func (o *FlowCancel) SetCanceledJobs(v []string) {
	o.CanceledJobs = &v
}

// GetFlowId returns the FlowId field value if set, zero value otherwise.
func (o *FlowCancel) GetFlowId() string {
	if o == nil || o.FlowId == nil {
		var ret string
		return ret
	}
	return *o.FlowId
}

// GetFlowIdOk returns a tuple with the FlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCancel) GetFlowIdOk() (*string, bool) {
	if o == nil || o.FlowId == nil {
		return nil, false
	}
	return o.FlowId, true
}

// HasFlowId returns a boolean if a field has been set.
func (o *FlowCancel) HasFlowId() bool {
	if o != nil && o.FlowId != nil {
		return true
	}

	return false
}

// SetFlowId gets a reference to the given string and assigns it to the FlowId field.
func (o *FlowCancel) SetFlowId(v string) {
	o.FlowId = &v
}

// GetFlowStatus returns the FlowStatus field value if set, zero value otherwise.
func (o *FlowCancel) GetFlowStatus() string {
	if o == nil || o.FlowStatus == nil {
		var ret string
		return ret
	}
	return *o.FlowStatus
}

// GetFlowStatusOk returns a tuple with the FlowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCancel) GetFlowStatusOk() (*string, bool) {
	if o == nil || o.FlowStatus == nil {
		return nil, false
	}
	return o.FlowStatus, true
}

// HasFlowStatus returns a boolean if a field has been set.
func (o *FlowCancel) HasFlowStatus() bool {
	if o != nil && o.FlowStatus != nil {
		return true
	}

	return false
}

// SetFlowStatus gets a reference to the given string and assigns it to the FlowStatus field.
func (o *FlowCancel) SetFlowStatus(v string) {
	o.FlowStatus = &v
}

// GetNotCanceledJobs returns the NotCanceledJobs field value if set, zero value otherwise.
func (o *FlowCancel) GetNotCanceledJobs() []string {
	if o == nil || o.NotCanceledJobs == nil {
		var ret []string
		return ret
	}
	return *o.NotCanceledJobs
}

// GetNotCanceledJobsOk returns a tuple with the NotCanceledJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCancel) GetNotCanceledJobsOk() (*[]string, bool) {
	if o == nil || o.NotCanceledJobs == nil {
		return nil, false
	}
	return o.NotCanceledJobs, true
}

// HasNotCanceledJobs returns a boolean if a field has been set.
func (o *FlowCancel) HasNotCanceledJobs() bool {
	if o != nil && o.NotCanceledJobs != nil {
		return true
	}

	return false
}

// SetNotCanceledJobs gets a reference to the given []string and assigns it to the NotCanceledJobs field.
func (o *FlowCancel) SetNotCanceledJobs(v []string) {
	o.NotCanceledJobs = &v
}

// GetTaskIds returns the TaskIds field value if set, zero value otherwise.
func (o *FlowCancel) GetTaskIds() []string {
	if o == nil || o.TaskIds == nil {
		var ret []string
		return ret
	}
	return *o.TaskIds
}

// GetTaskIdsOk returns a tuple with the TaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCancel) GetTaskIdsOk() (*[]string, bool) {
	if o == nil || o.TaskIds == nil {
		return nil, false
	}
	return o.TaskIds, true
}

// HasTaskIds returns a boolean if a field has been set.
func (o *FlowCancel) HasTaskIds() bool {
	if o != nil && o.TaskIds != nil {
		return true
	}

	return false
}

// SetTaskIds gets a reference to the given []string and assigns it to the TaskIds field.
func (o *FlowCancel) SetTaskIds(v []string) {
	o.TaskIds = &v
}

func (o FlowCancel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanceledJobs != nil {
		toSerialize["canceledJobs"] = o.CanceledJobs
	}
	if o.FlowId != nil {
		toSerialize["flowId"] = o.FlowId
	}
	if o.FlowStatus != nil {
		toSerialize["flowStatus"] = o.FlowStatus
	}
	if o.NotCanceledJobs != nil {
		toSerialize["notCanceledJobs"] = o.NotCanceledJobs
	}
	if o.TaskIds != nil {
		toSerialize["taskIds"] = o.TaskIds
	}
	return json.Marshal(toSerialize)
}

type NullableFlowCancel struct {
	value *FlowCancel
	isSet bool
}

func (v NullableFlowCancel) Get() *FlowCancel {
	return v.value
}

func (v *NullableFlowCancel) Set(val *FlowCancel) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowCancel) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowCancel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowCancel(val *FlowCancel) *NullableFlowCancel {
	return &NullableFlowCancel{value: val, isSet: true}
}

func (v NullableFlowCancel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowCancel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


