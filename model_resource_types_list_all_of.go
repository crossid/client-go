/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// ResourceTypesListAllOf struct for ResourceTypesListAllOf
type ResourceTypesListAllOf struct {
	Resources []ResourceType `json:"Resources"`
}

// NewResourceTypesListAllOf instantiates a new ResourceTypesListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceTypesListAllOf(resources []ResourceType, ) *ResourceTypesListAllOf {
	this := ResourceTypesListAllOf{}
	this.Resources = resources
	return &this
}

// NewResourceTypesListAllOfWithDefaults instantiates a new ResourceTypesListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceTypesListAllOfWithDefaults() *ResourceTypesListAllOf {
	this := ResourceTypesListAllOf{}
	return &this
}

// GetResources returns the Resources field value
func (o *ResourceTypesListAllOf) GetResources() []ResourceType {
	if o == nil  {
		var ret []ResourceType
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *ResourceTypesListAllOf) GetResourcesOk() (*[]ResourceType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Resources, true
}

// SetResources sets field value
func (o *ResourceTypesListAllOf) SetResources(v []ResourceType) {
	o.Resources = v
}

func (o ResourceTypesListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableResourceTypesListAllOf struct {
	value *ResourceTypesListAllOf
	isSet bool
}

func (v NullableResourceTypesListAllOf) Get() *ResourceTypesListAllOf {
	return v.value
}

func (v *NullableResourceTypesListAllOf) Set(val *ResourceTypesListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceTypesListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceTypesListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceTypesListAllOf(val *ResourceTypesListAllOf) *NullableResourceTypesListAllOf {
	return &NullableResourceTypesListAllOf{value: val, isSet: true}
}

func (v NullableResourceTypesListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceTypesListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


