/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
	"time"
)

// Job struct for Job
type Job struct {
	By *string `json:"by,omitempty"`
	CommitId *string `json:"commitId,omitempty"`
	Correlation *string `json:"correlation,omitempty"`
	Error *string `json:"error,omitempty"`
	FailureSize *int64 `json:"failureSize,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	LastExecutedAt *time.Time `json:"lastExecutedAt,omitempty"`
	Meta *ApiTokenMeta `json:"meta,omitempty"`
	NotBefore *time.Time `json:"notBefore,omitempty"`
	Payload interface{} `json:"payload,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusCode *int64 `json:"statusCode,omitempty"`
}

// NewJob instantiates a new Job object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJob() *Job {
	this := Job{}
	return &this
}

// NewJobWithDefaults instantiates a new Job object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobWithDefaults() *Job {
	this := Job{}
	return &this
}

// GetBy returns the By field value if set, zero value otherwise.
func (o *Job) GetBy() string {
	if o == nil || o.By == nil {
		var ret string
		return ret
	}
	return *o.By
}

// GetByOk returns a tuple with the By field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetByOk() (*string, bool) {
	if o == nil || o.By == nil {
		return nil, false
	}
	return o.By, true
}

// HasBy returns a boolean if a field has been set.
func (o *Job) HasBy() bool {
	if o != nil && o.By != nil {
		return true
	}

	return false
}

// SetBy gets a reference to the given string and assigns it to the By field.
func (o *Job) SetBy(v string) {
	o.By = &v
}

// GetCommitId returns the CommitId field value if set, zero value otherwise.
func (o *Job) GetCommitId() string {
	if o == nil || o.CommitId == nil {
		var ret string
		return ret
	}
	return *o.CommitId
}

// GetCommitIdOk returns a tuple with the CommitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetCommitIdOk() (*string, bool) {
	if o == nil || o.CommitId == nil {
		return nil, false
	}
	return o.CommitId, true
}

// HasCommitId returns a boolean if a field has been set.
func (o *Job) HasCommitId() bool {
	if o != nil && o.CommitId != nil {
		return true
	}

	return false
}

// SetCommitId gets a reference to the given string and assigns it to the CommitId field.
func (o *Job) SetCommitId(v string) {
	o.CommitId = &v
}

// GetCorrelation returns the Correlation field value if set, zero value otherwise.
func (o *Job) GetCorrelation() string {
	if o == nil || o.Correlation == nil {
		var ret string
		return ret
	}
	return *o.Correlation
}

// GetCorrelationOk returns a tuple with the Correlation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetCorrelationOk() (*string, bool) {
	if o == nil || o.Correlation == nil {
		return nil, false
	}
	return o.Correlation, true
}

// HasCorrelation returns a boolean if a field has been set.
func (o *Job) HasCorrelation() bool {
	if o != nil && o.Correlation != nil {
		return true
	}

	return false
}

// SetCorrelation gets a reference to the given string and assigns it to the Correlation field.
func (o *Job) SetCorrelation(v string) {
	o.Correlation = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *Job) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *Job) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *Job) SetError(v string) {
	o.Error = &v
}

// GetFailureSize returns the FailureSize field value if set, zero value otherwise.
func (o *Job) GetFailureSize() int64 {
	if o == nil || o.FailureSize == nil {
		var ret int64
		return ret
	}
	return *o.FailureSize
}

// GetFailureSizeOk returns a tuple with the FailureSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetFailureSizeOk() (*int64, bool) {
	if o == nil || o.FailureSize == nil {
		return nil, false
	}
	return o.FailureSize, true
}

// HasFailureSize returns a boolean if a field has been set.
func (o *Job) HasFailureSize() bool {
	if o != nil && o.FailureSize != nil {
		return true
	}

	return false
}

// SetFailureSize gets a reference to the given int64 and assigns it to the FailureSize field.
func (o *Job) SetFailureSize(v int64) {
	o.FailureSize = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Job) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Job) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Job) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *Job) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *Job) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *Job) SetKind(v string) {
	o.Kind = &v
}

// GetLastExecutedAt returns the LastExecutedAt field value if set, zero value otherwise.
func (o *Job) GetLastExecutedAt() time.Time {
	if o == nil || o.LastExecutedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastExecutedAt
}

// GetLastExecutedAtOk returns a tuple with the LastExecutedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetLastExecutedAtOk() (*time.Time, bool) {
	if o == nil || o.LastExecutedAt == nil {
		return nil, false
	}
	return o.LastExecutedAt, true
}

// HasLastExecutedAt returns a boolean if a field has been set.
func (o *Job) HasLastExecutedAt() bool {
	if o != nil && o.LastExecutedAt != nil {
		return true
	}

	return false
}

// SetLastExecutedAt gets a reference to the given time.Time and assigns it to the LastExecutedAt field.
func (o *Job) SetLastExecutedAt(v time.Time) {
	o.LastExecutedAt = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Job) GetMeta() ApiTokenMeta {
	if o == nil || o.Meta == nil {
		var ret ApiTokenMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetMetaOk() (*ApiTokenMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Job) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ApiTokenMeta and assigns it to the Meta field.
func (o *Job) SetMeta(v ApiTokenMeta) {
	o.Meta = &v
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *Job) GetNotBefore() time.Time {
	if o == nil || o.NotBefore == nil {
		var ret time.Time
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetNotBeforeOk() (*time.Time, bool) {
	if o == nil || o.NotBefore == nil {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *Job) HasNotBefore() bool {
	if o != nil && o.NotBefore != nil {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given time.Time and assigns it to the NotBefore field.
func (o *Job) SetNotBefore(v time.Time) {
	o.NotBefore = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Job) GetPayload() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetPayloadOk() (*interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return &o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *Job) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given interface{} and assigns it to the Payload field.
func (o *Job) SetPayload(v interface{}) {
	o.Payload = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *Job) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *Job) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *Job) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Job) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Job) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Job) SetStatus(v string) {
	o.Status = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *Job) GetStatusCode() int64 {
	if o == nil || o.StatusCode == nil {
		var ret int64
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetStatusCodeOk() (*int64, bool) {
	if o == nil || o.StatusCode == nil {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *Job) HasStatusCode() bool {
	if o != nil && o.StatusCode != nil {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int64 and assigns it to the StatusCode field.
func (o *Job) SetStatusCode(v int64) {
	o.StatusCode = &v
}

func (o Job) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.By != nil {
		toSerialize["by"] = o.By
	}
	if o.CommitId != nil {
		toSerialize["commitId"] = o.CommitId
	}
	if o.Correlation != nil {
		toSerialize["correlation"] = o.Correlation
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.FailureSize != nil {
		toSerialize["failureSize"] = o.FailureSize
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.LastExecutedAt != nil {
		toSerialize["lastExecutedAt"] = o.LastExecutedAt
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.NotBefore != nil {
		toSerialize["notBefore"] = o.NotBefore
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusCode != nil {
		toSerialize["statusCode"] = o.StatusCode
	}
	return json.Marshal(toSerialize)
}

type NullableJob struct {
	value *Job
	isSet bool
}

func (v NullableJob) Get() *Job {
	return v.value
}

func (v *NullableJob) Set(val *Job) {
	v.value = val
	v.isSet = true
}

func (v NullableJob) IsSet() bool {
	return v.isSet
}

func (v *NullableJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJob(val *Job) *NullableJob {
	return &NullableJob{value: val, isSet: true}
}

func (v NullableJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


