/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// CorrelateResource struct for CorrelateResource
type CorrelateResource struct {
	// id of a filter template used to find the resources to correlate to.
	CorrId string `json:"corrId"`
	// used to request a subset of resources and must be a valid FILTER expression.
	Filter string `json:"filter"`
	// The ref path create when resources are correlated.
	RefPath string `json:"refPath"`
}

// NewCorrelateResource instantiates a new CorrelateResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrelateResource(corrId string, filter string, refPath string, ) *CorrelateResource {
	this := CorrelateResource{}
	this.CorrId = corrId
	this.Filter = filter
	this.RefPath = refPath
	return &this
}

// NewCorrelateResourceWithDefaults instantiates a new CorrelateResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrelateResourceWithDefaults() *CorrelateResource {
	this := CorrelateResource{}
	return &this
}

// GetCorrId returns the CorrId field value
func (o *CorrelateResource) GetCorrId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CorrId
}

// GetCorrIdOk returns a tuple with the CorrId field value
// and a boolean to check if the value has been set.
func (o *CorrelateResource) GetCorrIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CorrId, true
}

// SetCorrId sets field value
func (o *CorrelateResource) SetCorrId(v string) {
	o.CorrId = v
}

// GetFilter returns the Filter field value
func (o *CorrelateResource) GetFilter() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *CorrelateResource) GetFilterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *CorrelateResource) SetFilter(v string) {
	o.Filter = v
}

// GetRefPath returns the RefPath field value
func (o *CorrelateResource) GetRefPath() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RefPath
}

// GetRefPathOk returns a tuple with the RefPath field value
// and a boolean to check if the value has been set.
func (o *CorrelateResource) GetRefPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RefPath, true
}

// SetRefPath sets field value
func (o *CorrelateResource) SetRefPath(v string) {
	o.RefPath = v
}

func (o CorrelateResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["corrId"] = o.CorrId
	}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["refPath"] = o.RefPath
	}
	return json.Marshal(toSerialize)
}

type NullableCorrelateResource struct {
	value *CorrelateResource
	isSet bool
}

func (v NullableCorrelateResource) Get() *CorrelateResource {
	return v.value
}

func (v *NullableCorrelateResource) Set(val *CorrelateResource) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrelateResource) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrelateResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrelateResource(val *CorrelateResource) *NullableCorrelateResource {
	return &NullableCorrelateResource{value: val, isSet: true}
}

func (v NullableCorrelateResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrelateResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


