/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// TaskFlow struct for TaskFlow
type TaskFlow struct {
	FlowExternalId *string `json:"flowExternalId,omitempty"`
	FlowInstanceKey *string `json:"flowInstanceKey,omitempty"`
	FlowKey *string `json:"flowKey,omitempty"`
}

// NewTaskFlow instantiates a new TaskFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskFlow() *TaskFlow {
	this := TaskFlow{}
	return &this
}

// NewTaskFlowWithDefaults instantiates a new TaskFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskFlowWithDefaults() *TaskFlow {
	this := TaskFlow{}
	return &this
}

// GetFlowExternalId returns the FlowExternalId field value if set, zero value otherwise.
func (o *TaskFlow) GetFlowExternalId() string {
	if o == nil || o.FlowExternalId == nil {
		var ret string
		return ret
	}
	return *o.FlowExternalId
}

// GetFlowExternalIdOk returns a tuple with the FlowExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskFlow) GetFlowExternalIdOk() (*string, bool) {
	if o == nil || o.FlowExternalId == nil {
		return nil, false
	}
	return o.FlowExternalId, true
}

// HasFlowExternalId returns a boolean if a field has been set.
func (o *TaskFlow) HasFlowExternalId() bool {
	if o != nil && o.FlowExternalId != nil {
		return true
	}

	return false
}

// SetFlowExternalId gets a reference to the given string and assigns it to the FlowExternalId field.
func (o *TaskFlow) SetFlowExternalId(v string) {
	o.FlowExternalId = &v
}

// GetFlowInstanceKey returns the FlowInstanceKey field value if set, zero value otherwise.
func (o *TaskFlow) GetFlowInstanceKey() string {
	if o == nil || o.FlowInstanceKey == nil {
		var ret string
		return ret
	}
	return *o.FlowInstanceKey
}

// GetFlowInstanceKeyOk returns a tuple with the FlowInstanceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskFlow) GetFlowInstanceKeyOk() (*string, bool) {
	if o == nil || o.FlowInstanceKey == nil {
		return nil, false
	}
	return o.FlowInstanceKey, true
}

// HasFlowInstanceKey returns a boolean if a field has been set.
func (o *TaskFlow) HasFlowInstanceKey() bool {
	if o != nil && o.FlowInstanceKey != nil {
		return true
	}

	return false
}

// SetFlowInstanceKey gets a reference to the given string and assigns it to the FlowInstanceKey field.
func (o *TaskFlow) SetFlowInstanceKey(v string) {
	o.FlowInstanceKey = &v
}

// GetFlowKey returns the FlowKey field value if set, zero value otherwise.
func (o *TaskFlow) GetFlowKey() string {
	if o == nil || o.FlowKey == nil {
		var ret string
		return ret
	}
	return *o.FlowKey
}

// GetFlowKeyOk returns a tuple with the FlowKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskFlow) GetFlowKeyOk() (*string, bool) {
	if o == nil || o.FlowKey == nil {
		return nil, false
	}
	return o.FlowKey, true
}

// HasFlowKey returns a boolean if a field has been set.
func (o *TaskFlow) HasFlowKey() bool {
	if o != nil && o.FlowKey != nil {
		return true
	}

	return false
}

// SetFlowKey gets a reference to the given string and assigns it to the FlowKey field.
func (o *TaskFlow) SetFlowKey(v string) {
	o.FlowKey = &v
}

func (o TaskFlow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlowExternalId != nil {
		toSerialize["flowExternalId"] = o.FlowExternalId
	}
	if o.FlowInstanceKey != nil {
		toSerialize["flowInstanceKey"] = o.FlowInstanceKey
	}
	if o.FlowKey != nil {
		toSerialize["flowKey"] = o.FlowKey
	}
	return json.Marshal(toSerialize)
}

type NullableTaskFlow struct {
	value *TaskFlow
	isSet bool
}

func (v NullableTaskFlow) Get() *TaskFlow {
	return v.value
}

func (v *NullableTaskFlow) Set(val *TaskFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskFlow(val *TaskFlow) *NullableTaskFlow {
	return &NullableTaskFlow{value: val, isSet: true}
}

func (v NullableTaskFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


