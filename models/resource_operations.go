// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResourceOperations ResourceOperations resource operations
//
// swagger:model ResourceOperations
type ResourceOperations struct {

	// create
	Create ResourceOperation `json:"create,omitempty"`

	// delete
	Delete ResourceOperation `json:"delete,omitempty"`

	// get
	Get ResourceOperation `json:"get,omitempty"`

	// patch
	Patch ResourceOperation `json:"patch,omitempty"`

	// replace
	Replace ResourceOperation `json:"replace,omitempty"`

	// search
	Search ResourceOperation `json:"search,omitempty"`
}

// Validate validates this resource operations
func (m *ResourceOperations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDelete(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGet(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePatch(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReplace(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSearch(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceOperations) validateCreate(formats strfmt.Registry) error {

	if swag.IsZero(m.Create) { // not required
		return nil
	}

	if err := m.Create.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("create")
		}
		return err
	}

	return nil
}

func (m *ResourceOperations) validateDelete(formats strfmt.Registry) error {

	if swag.IsZero(m.Delete) { // not required
		return nil
	}

	if err := m.Delete.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("delete")
		}
		return err
	}

	return nil
}

func (m *ResourceOperations) validateGet(formats strfmt.Registry) error {

	if swag.IsZero(m.Get) { // not required
		return nil
	}

	if err := m.Get.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("get")
		}
		return err
	}

	return nil
}

func (m *ResourceOperations) validatePatch(formats strfmt.Registry) error {

	if swag.IsZero(m.Patch) { // not required
		return nil
	}

	if err := m.Patch.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("patch")
		}
		return err
	}

	return nil
}

func (m *ResourceOperations) validateReplace(formats strfmt.Registry) error {

	if swag.IsZero(m.Replace) { // not required
		return nil
	}

	if err := m.Replace.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("replace")
		}
		return err
	}

	return nil
}

func (m *ResourceOperations) validateSearch(formats strfmt.Registry) error {

	if swag.IsZero(m.Search) { // not required
		return nil
	}

	if err := m.Search.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("search")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceOperations) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceOperations) UnmarshalBinary(b []byte) error {
	var res ResourceOperations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
