/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// EntitlementRequestOperations struct for EntitlementRequestOperations
type EntitlementRequestOperations struct {
	RequestedEntitlement *EntitlementRequestRequestedEntitlement `json:"requestedEntitlement,omitempty"`
	RequestedFor *string `json:"requestedFor,omitempty"`
}

// NewEntitlementRequestOperations instantiates a new EntitlementRequestOperations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementRequestOperations() *EntitlementRequestOperations {
	this := EntitlementRequestOperations{}
	return &this
}

// NewEntitlementRequestOperationsWithDefaults instantiates a new EntitlementRequestOperations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementRequestOperationsWithDefaults() *EntitlementRequestOperations {
	this := EntitlementRequestOperations{}
	return &this
}

// GetRequestedEntitlement returns the RequestedEntitlement field value if set, zero value otherwise.
func (o *EntitlementRequestOperations) GetRequestedEntitlement() EntitlementRequestRequestedEntitlement {
	if o == nil || o.RequestedEntitlement == nil {
		var ret EntitlementRequestRequestedEntitlement
		return ret
	}
	return *o.RequestedEntitlement
}

// GetRequestedEntitlementOk returns a tuple with the RequestedEntitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRequestOperations) GetRequestedEntitlementOk() (*EntitlementRequestRequestedEntitlement, bool) {
	if o == nil || o.RequestedEntitlement == nil {
		return nil, false
	}
	return o.RequestedEntitlement, true
}

// HasRequestedEntitlement returns a boolean if a field has been set.
func (o *EntitlementRequestOperations) HasRequestedEntitlement() bool {
	if o != nil && o.RequestedEntitlement != nil {
		return true
	}

	return false
}

// SetRequestedEntitlement gets a reference to the given EntitlementRequestRequestedEntitlement and assigns it to the RequestedEntitlement field.
func (o *EntitlementRequestOperations) SetRequestedEntitlement(v EntitlementRequestRequestedEntitlement) {
	o.RequestedEntitlement = &v
}

// GetRequestedFor returns the RequestedFor field value if set, zero value otherwise.
func (o *EntitlementRequestOperations) GetRequestedFor() string {
	if o == nil || o.RequestedFor == nil {
		var ret string
		return ret
	}
	return *o.RequestedFor
}

// GetRequestedForOk returns a tuple with the RequestedFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRequestOperations) GetRequestedForOk() (*string, bool) {
	if o == nil || o.RequestedFor == nil {
		return nil, false
	}
	return o.RequestedFor, true
}

// HasRequestedFor returns a boolean if a field has been set.
func (o *EntitlementRequestOperations) HasRequestedFor() bool {
	if o != nil && o.RequestedFor != nil {
		return true
	}

	return false
}

// SetRequestedFor gets a reference to the given string and assigns it to the RequestedFor field.
func (o *EntitlementRequestOperations) SetRequestedFor(v string) {
	o.RequestedFor = &v
}

func (o EntitlementRequestOperations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestedEntitlement != nil {
		toSerialize["requestedEntitlement"] = o.RequestedEntitlement
	}
	if o.RequestedFor != nil {
		toSerialize["requestedFor"] = o.RequestedFor
	}
	return json.Marshal(toSerialize)
}

type NullableEntitlementRequestOperations struct {
	value *EntitlementRequestOperations
	isSet bool
}

func (v NullableEntitlementRequestOperations) Get() *EntitlementRequestOperations {
	return v.value
}

func (v *NullableEntitlementRequestOperations) Set(val *EntitlementRequestOperations) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementRequestOperations) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementRequestOperations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementRequestOperations(val *EntitlementRequestOperations) *NullableEntitlementRequestOperations {
	return &NullableEntitlementRequestOperations{value: val, isSet: true}
}

func (v NullableEntitlementRequestOperations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementRequestOperations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


