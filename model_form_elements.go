/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// FormElements struct for FormElements
type FormElements struct {
	Items []FormElement
}

// NewFormElements instantiates a new FormElements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormElements() *FormElements {
	this := FormElements{}
	return &this
}

// NewFormElementsWithDefaults instantiates a new FormElements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormElementsWithDefaults() *FormElements {
	this := FormElements{}
	return &this
}

func (o FormElements) MarshalJSON() ([]byte, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return json.Marshal(toSerialize)
}

func (o *FormElements) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableFormElements struct {
	value *FormElements
	isSet bool
}

func (v NullableFormElements) Get() *FormElements {
	return v.value
}

func (v *NullableFormElements) Set(val *FormElements) {
	v.value = val
	v.isSet = true
}

func (v NullableFormElements) IsSet() bool {
	return v.isSet
}

func (v *NullableFormElements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormElements(val *FormElements) *NullableFormElements {
	return &NullableFormElements{value: val, isSet: true}
}

func (v NullableFormElements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormElements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


