/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// MapResource struct for MapResource
type MapResource struct {
	// id of a filter template used to find the resources to map from
	CorrId string `json:"corrId"`
	// used to request a subset of resources and must be a valid FILTER expression.
	Filter string `json:"filter"`
	// The mapper to be used on the matched resources to produce the attributes to be copied. If not set it tries to copy any possible attribute
	MapperId string `json:"mapperId"`
}

// NewMapResource instantiates a new MapResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMapResource(corrId string, filter string, mapperId string, ) *MapResource {
	this := MapResource{}
	this.CorrId = corrId
	this.Filter = filter
	this.MapperId = mapperId
	return &this
}

// NewMapResourceWithDefaults instantiates a new MapResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMapResourceWithDefaults() *MapResource {
	this := MapResource{}
	return &this
}

// GetCorrId returns the CorrId field value
func (o *MapResource) GetCorrId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CorrId
}

// GetCorrIdOk returns a tuple with the CorrId field value
// and a boolean to check if the value has been set.
func (o *MapResource) GetCorrIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CorrId, true
}

// SetCorrId sets field value
func (o *MapResource) SetCorrId(v string) {
	o.CorrId = v
}

// GetFilter returns the Filter field value
func (o *MapResource) GetFilter() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *MapResource) GetFilterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *MapResource) SetFilter(v string) {
	o.Filter = v
}

// GetMapperId returns the MapperId field value
func (o *MapResource) GetMapperId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.MapperId
}

// GetMapperIdOk returns a tuple with the MapperId field value
// and a boolean to check if the value has been set.
func (o *MapResource) GetMapperIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MapperId, true
}

// SetMapperId sets field value
func (o *MapResource) SetMapperId(v string) {
	o.MapperId = v
}

func (o MapResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["corrId"] = o.CorrId
	}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["mapperId"] = o.MapperId
	}
	return json.Marshal(toSerialize)
}

type NullableMapResource struct {
	value *MapResource
	isSet bool
}

func (v NullableMapResource) Get() *MapResource {
	return v.value
}

func (v *NullableMapResource) Set(val *MapResource) {
	v.value = val
	v.isSet = true
}

func (v NullableMapResource) IsSet() bool {
	return v.isSet
}

func (v *NullableMapResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMapResource(val *MapResource) *NullableMapResource {
	return &NullableMapResource{value: val, isSet: true}
}

func (v NullableMapResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMapResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


