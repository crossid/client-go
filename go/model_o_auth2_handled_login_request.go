/*
 * CrossID Public API
 *
 * CrossID API Reference 
 *
 * API version: 1.0.0
 * Contact: developer@crossid.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cidclient

import (
	"encoding/json"
)

// OAuth2HandledLoginRequest struct for OAuth2HandledLoginRequest
type OAuth2HandledLoginRequest struct {
	Acr *string `json:"acr,omitempty"`
	Context *map[string]string `json:"context,omitempty"`
	ForceSubjectIdentifier *string `json:"force_subject_identifier,omitempty"`
	Remember *bool `json:"remember,omitempty"`
	RememberFor *int32 `json:"remember_for,omitempty"`
	Subject *string `json:"subject,omitempty"`
}

// NewOAuth2HandledLoginRequest instantiates a new OAuth2HandledLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuth2HandledLoginRequest() *OAuth2HandledLoginRequest {
	this := OAuth2HandledLoginRequest{}
	return &this
}

// NewOAuth2HandledLoginRequestWithDefaults instantiates a new OAuth2HandledLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuth2HandledLoginRequestWithDefaults() *OAuth2HandledLoginRequest {
	this := OAuth2HandledLoginRequest{}
	return &this
}

// GetAcr returns the Acr field value if set, zero value otherwise.
func (o *OAuth2HandledLoginRequest) GetAcr() string {
	if o == nil || o.Acr == nil {
		var ret string
		return ret
	}
	return *o.Acr
}

// GetAcrOk returns a tuple with the Acr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2HandledLoginRequest) GetAcrOk() (*string, bool) {
	if o == nil || o.Acr == nil {
		return nil, false
	}
	return o.Acr, true
}

// HasAcr returns a boolean if a field has been set.
func (o *OAuth2HandledLoginRequest) HasAcr() bool {
	if o != nil && o.Acr != nil {
		return true
	}

	return false
}

// SetAcr gets a reference to the given string and assigns it to the Acr field.
func (o *OAuth2HandledLoginRequest) SetAcr(v string) {
	o.Acr = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *OAuth2HandledLoginRequest) GetContext() map[string]string {
	if o == nil || o.Context == nil {
		var ret map[string]string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2HandledLoginRequest) GetContextOk() (*map[string]string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *OAuth2HandledLoginRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given map[string]string and assigns it to the Context field.
func (o *OAuth2HandledLoginRequest) SetContext(v map[string]string) {
	o.Context = &v
}

// GetForceSubjectIdentifier returns the ForceSubjectIdentifier field value if set, zero value otherwise.
func (o *OAuth2HandledLoginRequest) GetForceSubjectIdentifier() string {
	if o == nil || o.ForceSubjectIdentifier == nil {
		var ret string
		return ret
	}
	return *o.ForceSubjectIdentifier
}

// GetForceSubjectIdentifierOk returns a tuple with the ForceSubjectIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2HandledLoginRequest) GetForceSubjectIdentifierOk() (*string, bool) {
	if o == nil || o.ForceSubjectIdentifier == nil {
		return nil, false
	}
	return o.ForceSubjectIdentifier, true
}

// HasForceSubjectIdentifier returns a boolean if a field has been set.
func (o *OAuth2HandledLoginRequest) HasForceSubjectIdentifier() bool {
	if o != nil && o.ForceSubjectIdentifier != nil {
		return true
	}

	return false
}

// SetForceSubjectIdentifier gets a reference to the given string and assigns it to the ForceSubjectIdentifier field.
func (o *OAuth2HandledLoginRequest) SetForceSubjectIdentifier(v string) {
	o.ForceSubjectIdentifier = &v
}

// GetRemember returns the Remember field value if set, zero value otherwise.
func (o *OAuth2HandledLoginRequest) GetRemember() bool {
	if o == nil || o.Remember == nil {
		var ret bool
		return ret
	}
	return *o.Remember
}

// GetRememberOk returns a tuple with the Remember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2HandledLoginRequest) GetRememberOk() (*bool, bool) {
	if o == nil || o.Remember == nil {
		return nil, false
	}
	return o.Remember, true
}

// HasRemember returns a boolean if a field has been set.
func (o *OAuth2HandledLoginRequest) HasRemember() bool {
	if o != nil && o.Remember != nil {
		return true
	}

	return false
}

// SetRemember gets a reference to the given bool and assigns it to the Remember field.
func (o *OAuth2HandledLoginRequest) SetRemember(v bool) {
	o.Remember = &v
}

// GetRememberFor returns the RememberFor field value if set, zero value otherwise.
func (o *OAuth2HandledLoginRequest) GetRememberFor() int32 {
	if o == nil || o.RememberFor == nil {
		var ret int32
		return ret
	}
	return *o.RememberFor
}

// GetRememberForOk returns a tuple with the RememberFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2HandledLoginRequest) GetRememberForOk() (*int32, bool) {
	if o == nil || o.RememberFor == nil {
		return nil, false
	}
	return o.RememberFor, true
}

// HasRememberFor returns a boolean if a field has been set.
func (o *OAuth2HandledLoginRequest) HasRememberFor() bool {
	if o != nil && o.RememberFor != nil {
		return true
	}

	return false
}

// SetRememberFor gets a reference to the given int32 and assigns it to the RememberFor field.
func (o *OAuth2HandledLoginRequest) SetRememberFor(v int32) {
	o.RememberFor = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *OAuth2HandledLoginRequest) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2HandledLoginRequest) GetSubjectOk() (*string, bool) {
	if o == nil || o.Subject == nil {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *OAuth2HandledLoginRequest) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *OAuth2HandledLoginRequest) SetSubject(v string) {
	o.Subject = &v
}

func (o OAuth2HandledLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Acr != nil {
		toSerialize["acr"] = o.Acr
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.ForceSubjectIdentifier != nil {
		toSerialize["force_subject_identifier"] = o.ForceSubjectIdentifier
	}
	if o.Remember != nil {
		toSerialize["remember"] = o.Remember
	}
	if o.RememberFor != nil {
		toSerialize["remember_for"] = o.RememberFor
	}
	if o.Subject != nil {
		toSerialize["subject"] = o.Subject
	}
	return json.Marshal(toSerialize)
}

type NullableOAuth2HandledLoginRequest struct {
	value *OAuth2HandledLoginRequest
	isSet bool
}

func (v NullableOAuth2HandledLoginRequest) Get() *OAuth2HandledLoginRequest {
	return v.value
}

func (v *NullableOAuth2HandledLoginRequest) Set(val *OAuth2HandledLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuth2HandledLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuth2HandledLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuth2HandledLoginRequest(val *OAuth2HandledLoginRequest) *NullableOAuth2HandledLoginRequest {
	return &NullableOAuth2HandledLoginRequest{value: val, isSet: true}
}

func (v NullableOAuth2HandledLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuth2HandledLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


